#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

CODENAME="sg2002_licheervnano_sd"

function build_bootloader_internal {

   echo "Build LicheeRV-Nano-Build... "
   reset_cc_vars_to_null
   local saved_path="$PATH"

   set +e
   run_command2 "source build/cvisetup.sh" build.log
   run_command2 "defconfig $CODENAME" build.log
   run_command2 "build_uboot" build.log
   set -e
}

#
# Note: patch the fsbl/plat/sg200x/bl2/bl2_main.c to set the uart baudrate to
# 115200. Otherwise, a hardware error may occur in the uart after the chip
# is reset, and this error will cause the uart to interrupt continuously.
#
function bootloader_patch {

   old1="if (v == BOOT_SRC_UART)"
   new1="if (v == BOOT_SRC_SD)"
   old2="console_init(0, PLAT_UART_CLK_IN_HZ, UART_DL_BAUDRATE)"
   new2="console_init(0, 25804800, 115200)"

   file="fsbl/plat/sg200x/bl2/bl2_main.c"
   if ! [ -f $file ]; then
      echo "ERROR: file $file not found!"
      exit 1
   fi
   run_command "sed -i 's/${old1}/${new1}/' $file"
   run_command "sed -i 's/${old2}/${new2}/' $file"
}

if [[ "$BOARD" == "licheerv-nano" ]]; then
   all_funcs_list+=(build_sophgo_host_tools)
fi

function build_sophgo_host_tools {

   local gh="https://github.com"
   local name="sophgo_host_tools"
   local url="$gh/sophgo/host-tools/archive/refs/tags"
   local ver=$VER_SOPHGO_HOST_TOOLS
   local remotefile="$ver.tar.gz"
   local localfile="$name-$remotefile"
   local compdir=$ARCH_DIR/$name/$ver

   if ! [ -d $compdir ]; then

      show_work_on_component_msg "SOPHGO host tools"
      mkdir -p $compdir/..
      pushd $compdir/..

      download_file_in_cache "$url" "$remotefile" "$localfile"
      extract_cachefile_tar_gz "$localfile" host-tools-$ver $ver

      popd

   else

      show_skip_component_msg "SOPHGO host tools"
   fi
}

function build_sophgo_host_tools_installed_status {

   local arch_list=""
   local name="sophgo_host_tools"
   local ver=$VER_SOPHGO_HOST_TOOLS

   pushd $ARCH_DIR/..

   for x in ${ALL_ARCH_LIST[@]}; do
      if [ -d $x/$name/$ver ]; then
         if [ -d $x/$name/$ver/gcc ]; then
            arch_list="${arch_list}$x "
         else
            echo "error"
            return
         fi
      fi
   done

   popd

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}


if [[ "$BOARD" == "licheerv-nano" ]]; then
   all_funcs_list+=(build_licheerv_nano_boot)
   default_funcs+=(build_licheerv_nano_boot)
fi

function build_licheerv_nano_boot {

   local name="licheerv_nano_boot"
   local tools="sophgo_host_tools"
   local gh="https://github.com"
   local url="$gh/sipeed/LicheeRV-Nano-Build/archive/refs/tags"
   local ver=$VER_LICHEERV_NANO_BOOT
   local remotefile="$ver.tar.gz"
   local localfile="$name-$remotefile"
   local compdir=$ARCH_DIR/$name/$ver

   if ! [ -d $compdir ]; then

      show_work_on_component_msg "LicheeRV Nano Boot"
      mkdir -p $compdir/..
      pushd $compdir/..

      download_file_in_cache "$url" "$remotefile" "$localfile"
      extract_cachefile_tar_gz "$localfile" LicheeRV-Nano-Build-$ver $ver

      cd $compdir

      build_sophgo_host_tools
      ln -s $ARCH_DIR/$tools/$VER_SOPHGO_HOST_TOOLS host-tools

      bootloader_patch
      build_bootloader_internal

      local fip_bin="install/soc_$CODENAME/fip.bin"
      if ! [ -f $ARCH_DIR/$name/$ver/$fip_bin ]; then
         echo "ERROR: build failed !!!" >> build.log
         exit 1
      fi

      popd

   elif [ "$REBUILD" == "1" ]; then

      pushd bootloader
      build_bootloader_internal
      popd

   else
      show_skip_component_msg "LicheeRV Nano Boot"
   fi
}

function build_licheerv_nano_boot_installed_status {

   local arch_list=""
   local name="licheerv_nano_boot"
   local ver=$VER_LICHEERV_NANO_BOOT
   local fip_bin="install/soc_$CODENAME/fip.bin"

   pushd $ARCH_DIR/..

   for x in ${ALL_ARCH_LIST[@]}; do
      if [ -d $x/$name/$ver ]; then
         if [ -f $x/$name/$ver/$fip_bin ]; then
            arch_list="${arch_list}$x "
         else
            echo "error"
            return
         fi
      fi
   done

   popd

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}

