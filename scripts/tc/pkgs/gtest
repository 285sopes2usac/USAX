#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

##############################
# Build gtest
##############################

function download_googletest {

   local url="https://github.com/google/googletest.git"
   local tarname="gtest-$VER_GTEST.tgz"
   local compdir="$TC/noarch/gtest/$VER_GTEST"

   if ! [ -d $compdir ]; then

      mkdir -p $compdir
      pushd $compdir/..
      download_git_repo_in_cache "$url" release-$VER_GTEST $tarname $VER_GTEST
      extract_cachefile_tar_gz $tarname $VER_GTEST $VER_GTEST
      popd
   fi
}

all_funcs_list+=(build_gtest)
function build_gtest {

   local compdir="$TC/noarch/gtest/$VER_GTEST"
   local builddir=$HOST_ARCH_DIR_SYS/gtest/$VER_GTEST

   download_googletest

   if ! [ -d $builddir ]; then

      show_work_on_component_msg "GOOGLE TEST ($HOST_ARCH)"
      mkdir -p $builddir
      pushd $builddir

      reset_cc_vars

      $CMAKE                              \
         -DCMAKE_BUILD_TYPE=Debug         \
         -DGOOGLETEST_VERSION=$VER_GTEST  \
         $compdir/googletest

      run_command2 "make -j$BUILD_PAR" build.log

      popd

   else
      show_skip_component_msg "GOOGLE TEST ($HOST_ARCH)"
   fi
}

function build_gtest_installed_status {

   local builddir=$HOST_ARCH_DIR_SYS/gtest/$VER_GTEST

   if [ -d $builddir ]; then
      if [ -f $builddir/lib/libgtest.a ]; then
         echo "installed host_$HOST_ARCH"
      else
         echo "error"
      fi
   fi
}

all_funcs_list+=(build_gmock)
function build_gmock {

   local compdir="$TC/noarch/gtest/$VER_GTEST"
   local builddir=$HOST_ARCH_DIR_SYS/gmock/$VER_GTEST

   download_googletest

   if ! [ -d $builddir ]; then

      show_work_on_component_msg "GOOGLE MOCK ($HOST_ARCH)"
      mkdir -p $builddir
      pushd $builddir

      reset_cc_vars

      $CMAKE                              \
         -DCMAKE_BUILD_TYPE=Debug         \
         -DGOOGLETEST_VERSION=$VER_GTEST  \
         $compdir/googlemock

      run_command2 "make -j$BUILD_PAR" build.log

      popd

   else
      show_skip_component_msg "GOOGLE MOCK ($HOST_ARCH)"
   fi
}

function build_gmock_installed_status {

   local builddir=$HOST_ARCH_DIR_SYS/gmock/$VER_GTEST

   if [ -d $builddir ]; then
      if [ -f $builddir/lib/libgmock.a ]; then
         echo "installed host_$HOST_ARCH"
      else
         echo "error"
      fi
   fi
}


