#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

ZLIB_VER="1.2.11"

function download_zlib {

   local ver="$ZLIB_VER"
   local tarname="zlib-$ver.tgz"
   local url="https://github.com/madler/zlib"

   download_git_repo_in_cache "$url" v$ver $tarname zlib
   extract_cachefile_tar_gz $tarname --
}

all_funcs_list+=(build_zlib)
function build_zlib {

   pushd $ARCH_DIR

   if ! [ -d zlib ]; then

      show_work_on_component_msg "ZLIB"
      reset_cc_vars

      download_zlib
      cd zlib

      local p="$ARCH_DIR/zlib/install"

      do_common_cross_compiler_setup
      set_cc_vars_to_tc
      export CROSS_PREFIX="${ARCH_GCC_TC}-linux-"

      run_command2 "./configure --prefix='$p' --static" configure.log

      set +e
      dump_cross_compiler_env "configure.log"

      run_command2 "make -j$BUILD_PAR" build.log
      dump_cross_compiler_env "build.log"

      set -e
      run_command2 "make install" install.log
      export CROSS_PREFIX=""

   else
      show_skip_component_msg "ZLIB"
   fi

   popd
}

function build_zlib_installed_status {

   local arch_list=""

   pushd $TC/$GCC_TC_VER_

   for x in ${ALL_ARCH_LIST[@]}; do
      if [ -d $x/zlib ]; then
         if [ -f $x/zlib/install/lib/libz.a ]; then
            arch_list="${arch_list}$x "
         else
            echo "error"
            return
         fi
      fi
   done

   popd

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}
