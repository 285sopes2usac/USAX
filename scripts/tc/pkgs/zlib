#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

function download_zlib {

   local ver="$VER_ZLIB"
   local tarname="zlib-$ver.tgz"
   local url="https://github.com/madler/zlib"

   download_git_repo_in_cache "$url" v$ver $tarname $ver
   extract_cachefile_tar_gz $tarname $ver $ver
}

all_funcs_list+=(build_zlib)
function build_zlib {

   local compdir=$ARCH_DIR/zlib/$VER_ZLIB
   local installdir=$compdir/install

   if ! [ -d $compdir ]; then

      show_work_on_component_msg "ZLIB"
      mkdir -p $compdir/..
      pushd $compdir/..

      reset_cc_vars
      download_zlib

      do_common_cross_compiler_setup
      set_cc_vars_to_tc

      cd $compdir
      run_command2 "./configure --prefix='$installdir' --static" configure.log
      dump_cross_compiler_env "configure.log"

      run_command2 "make -j$BUILD_PAR" build.log
      dump_cross_compiler_env "build.log"

      run_command2 "make install" install.log
      popd

   else

      show_skip_component_msg "ZLIB"
   fi
}

function build_zlib_installed_status {

   local compdir=$ARCH_DIR/zlib/$VER_ZLIB
   local arch_list=""

   pushd $ARCH_DIR/..

   for x in ${ALL_ARCH_LIST[@]}; do
      if [ -d $x/zlib/$VER_ZLIB ]; then
         if [ -f $x/zlib/$VER_ZLIB/install/lib/libz.a ]; then
            arch_list="${arch_list}$x "
         else
            echo "error"
            return
         fi
      fi
   done

   popd

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}
