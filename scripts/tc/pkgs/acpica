#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

function patch_acpica {

   local def_before='#if defined(_LINUX) || defined(__linux__)'
   local def_after='#if defined(__usax_KERNEL__)   // patched'
   local inc_before='#include "aclinux.h"'
   local inc_after='#include "usax/acpi/acusax.h" // patched'

   pushd 'source/include/platform'
   run_command "sed -i 's@$def_before@$def_after@g' acenv.h"
   run_command "sed -i 's@$inc_before@$inc_after@g' acenv.h"
   popd

   # Make 3rd_party/acpi to point to source/include in order usax's code
   # to see the ACPICA headers using "3rd_party/acpi".
   run_command "mkdir 3rd_party"
   run_command "echo 'Directory created by usax' > 3rd_party/README"
   run_command "ln -s '../source/include' '3rd_party/acpi'"
}

all_funcs_list+=(download_acpica)
function download_acpica {

   local compdir="$TC/noarch/acpica/$VER_ACPICA"
   local url="https://github.com/acpica/acpica.git"
   local tarname="acpica-$VER_ACPICA.tgz"

   if ! [ -d $compdir ]; then

      show_work_on_component_msg "ACPICA"
      mkdir -p $compdir/..
      pushd $compdir/..

      download_git_repo_in_cache "$url" $VER_ACPICA $tarname $VER_ACPICA
      extract_cachefile_tar_gz $tarname $VER_ACPICA $VER_ACPICA

      pushd $VER_ACPICA
      patch_acpica
      popd
      popd

   else

      show_skip_component_msg "ACPICA"
   fi
}

function download_acpica_installed_status {
   if [ -d $TC/noarch/acpica/$VER_ACPICA ]; then
      echo "installed noarch"
   fi
}
