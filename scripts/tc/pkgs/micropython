#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

function download_micropython {

   local ver="$VER_MICROPYTHON"
   local tarname="micropython-$ver.tgz"
   local url="https://github.com/micropython/micropython.git"

   download_git_repo_in_cache "$url" v$ver $tarname $ver
   extract_cachefile_tar_gz $tarname $ver $ver
}

all_funcs_list+=(build_micropython)
function build_micropython {

   local compdir=$ARCH_DIR/micropython/$VER_MICROPYTHON
   local params=()

   if ! [ -d $compdir ]; then

      show_work_on_component_msg "MICROPYTHON"
      reset_cc_vars

      mkdir -p $compdir/..
      pushd $compdir/..

      download_micropython
      cd $compdir


      # mpy-cross MUST be compiled to run on the *host* system.
      set +e
      pushd mpy-cross

      params+=(V=1)
      run_command2 "make ${params[*]} -j$BUILD_PAR" build_1.log
      dump_cross_compiler_env "build_1.log"
      popd

      # The unix port must be compiled for the *target* architecture.
      pushd ports/unix
      set_cc_vars_to_tc

      params+=(MICROPY_PY_FFI=0)
      params+=(MICROPY_PY_THREAD=0)
      params+=(MICROPY_PY_BTREE=0)

      run_command2 "make submodules" make_submodules.log

      export LDFLAGS_EXTRA="-static"
      run_command2 "make ${params[*]} -j$BUILD_PAR" build_2.log
      dump_cross_compiler_env "build_2.log"

      if ! [ -f $compdir/ports/unix/build-standard/micropython ]; then
         echo "ERROR: build failed !!!" >> build_2.log
         exit 1
      fi
      popd
      set -e

      export LDFLAGS_EXTRA=""
      popd

   else
      show_skip_component_msg "MICROPYTHON"
   fi
}

function build_micropython_installed_status {

   local arch_list=""
   local relBinaryPath="ports/unix/build-standard/micropython"

   pushd $ARCH_DIR/..

   for x in ${ALL_ARCH_LIST[@]}; do
      if [ -d $x/micropython/$VER_MICROPYTHON ]; then
         if [ -f $x/micropython/$VER_MICROPYTHON/$relBinaryPath ]; then
            arch_list="${arch_list}$x "
         else
            echo "error"
            return
         fi
      fi
   done

   popd

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}
