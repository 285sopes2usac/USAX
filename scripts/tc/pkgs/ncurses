#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

NCURSES_VER="6.1"

all_funcs_list+=(build_ncurses)
function build_ncurses {

   pushd $ARCH_DIR

   if ! [ -d ncurses ]; then

      show_work_on_component_msg "NCURSES"
      reset_cc_vars

      local ver="$NCURSES_VER"
      local tarname=ncurses-$ver.tar.gz
      local install_dir=$ARCH_DIR/ncurses/install
      download_file_in_cache "https://ftp.gnu.org/pub/gnu/ncurses" "$tarname"
      extract_cachefile_tar_gz $tarname ncurses-$ver ncurses

      mkdir -p $install_dir
      cd ncurses

      local o1="--host=${ARCH_SHORT}-pc-linux-gnu --prefix=$install_dir"
      local o2="--datarootdir=/usr/share --disable-db-install"
      local o4="--without-progs --without-cxx --without-cxx-binding"
      local o5="--without-ada --without-manpages --without-dlsym"

      do_common_cross_compiler_setup
      set_cc_vars_to_tc
      run_command2 "./configure $o1 $o2 $o3 $o4 $o5" configure.log

      set +e
      run_command2 "make -j$BUILD_PAR" build.log
      run_command2 "make install" install.log
      dump_cross_compiler_env "build.log"

      if ! [ -f $ARCH_DIR/ncurses/install/lib/libncurses.a ]; then
         echo "ERROR: build failed !!!" >> build.log
         exit 1
      fi

      set -e
      export CC_POST_FLAGS=""

   else
      show_skip_component_msg "NCURSES"
   fi

   popd
}

function build_ncurses_installed_status {

   local arch_list=""
   pushd $ARCH_DIR/..

   for x in ${ALL_ARCH_LIST[@]}; do
      if [ -d $x/ncurses ]; then
         if [ -f $x/ncurses/install/lib/libncurses.a ]; then
            arch_list="${arch_list}$x "
         else
            echo "error"
            return
         fi
      fi
   done

   popd

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}
